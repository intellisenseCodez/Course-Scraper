name: Run Jupyter Notebook and Save Data

on:

  workflow_dispatch:  # Allows manual trigger

jobs:
  run-notebook-and-scrape:
    name: Run Jupyter Notebook to Scrape Data
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents


    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Install the Python version needed
          cache: 'pip'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install requests pandas jupyter jupyterlab
          
        
      # Step 4: Build and run the script
      - name: convert notebook to script and run
        run: |
          jupyter nbconvert --to script course_scraper.ipynb
          python course_scraper.py

  commit-scraped-data-to-csv:
    name: Commit Scraped Data to CSV
    needs: run-notebook-and-scrape
    runs-on: ubuntu-latest
    steps:

        # Step 5: Commit and push the generated CSV file if there are changes
        - name: Configure git
          run: |
            git config user.email 41898282+github-actions[bot]@users.noreply.github.com
            git config user.name "github-actions[bot]"
            git add ./*
            if ! git diff --cached --quiet; then  # Check if there are staged changes
              git commit -m "Add CSV file"
              git pull --rebase origin main
              git push origin main
            else
              echo "No changes to commit."
            fi
          
        - name: Commit and push CSV file
          run: |
            git diff --quiet && git diff --staged --quiet || git commit -m "Add CSV file"
            git pull --rebase origin main  # Pull latest changes safely
            git push origin main

        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}
            directory: .
            force: true


   

